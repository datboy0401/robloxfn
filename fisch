local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "üêüFisch Script GUIüêü",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Fisch Scripts",
   LoadingSubtitle = "DatBoy0401",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local HomeTab = Window:CreateTab("Home", nil) -- Title, Image
local MainTab = Window:CreateTab("Main", nil) -- Title, Image
local TeleportTab = Window:CreateTab("Teleports", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Fishing")
local Main2Section = MainTab:CreateSection("Fish Selling")
local Main3Section = MainTab:CreateSection("Player")


Rayfield:Notify({
   Title = "Script Executed!",
   Content = "üêüFisch Script GUIüêü",
   Duration = 5,
   Image = nil,
})

local Slider = HomeTab:CreateSlider({
   Name = "Walk Speed",
   Range = {16, 300},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

local Dropdown = TeleportTab:CreateDropdown({
   Name = "Select Area",
   Options = {"Moosewood","Roslit Bay","Ancient Isle","Forsaken Shores","Mushgrove Swamp","Snowcap Island","Sunstone Island","Statue Of Sovereignty","Desolate Deep","Terrapin Island","The Depths","Vertigo"},
   CurrentOption = {"None"},
   MultipleOptions = false,
   Flag = "Teleport", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Options)
        if (Options) == Roslit Bay then
                local player = game.Players.LocalPlayer
                local Roslit Bay == game.Workspace.world.map.Roslit_Bay
                player.Teleport.Roslit_Bay = true
   end,
})
